<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="f66.springboot_mvc_starter.repository.ArticleRepository">

    <resultMap id="ArticleResultMap" type="ArticleDTO" autoMapping="true">
        <id property="id" column="id"/>

        <association property="user" javaType="UserDTO">
            <id property="id" column="user_id"/>
            <result property="nickname" column="user_nickname"/>

            <association property="image" javaType="UserImageDTO">
                <result property="url" column="user_image_url"/>
            </association>
        </association>

        <association property="category" javaType="ArticleCategoryDTO">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
        </association>
    </resultMap>

    <insert id="insertArticle" parameterType="ArticleDTO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO articles (title, content, user_id, category_id)
        VALUES (#{title}, #{content}, #{userId}, #{categoryId})
    </insert>

    <update id="updateArticle" parameterType="ArticleDTO">
        UPDATE articles
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateCommentCount" parameterType="map">
        UPDATE articles
        SET comment_count = comment_count + #{delta}
        WHERE id = #{articleId}
    </update>

    <update id="updateIsDeleted" parameterType="map">
        UPDATE articles
        SET is_deleted = #{isDeleted},
            updated_at = now()
        WHERE id = #{articleId}
    </update>

    <select id="selectArticleByIdAndUserId" parameterType="map" resultType="ArticleDTO">
        SELECT *
        FROM articles
        WHERE id = #{articleId}
          AND user_id = #{userId}
    </select>

    <select id="selectArticleWithRelationsById" parameterType="ArticleDTO" resultMap="ArticleResultMap">
        SELECT
        a.*,
        u.id as "user_id",
        u.nickname as "user_nickname",
        ui.url as "user_image_url",
        ac.id as "category_id",
        ac.name as "category_name",
        <if test="userId != null">
            av.is_active
        </if>
        <if test="userId == null">
            false
        </if>
        AS voted
        FROM articles a
        JOIN users u ON a.user_id = u.id
        JOIN article_categories ac ON a.category_id = ac.id
        JOIN user_images ui ON a.user_id = ui.user_id
        <if test="userId != null">
            LEFT JOIN article_votes av ON a.id = av.article_id AND av.user_id = #{userId}
        </if>
        WHERE a.id = #{id}
        and a.is_deleted = false
    </select>

    <select id="selectArticlesWithRelationsByRequest" parameterType="ArticlePageRequest"
            resultMap="ArticleResultMap">
        SELECT
        a.*,
        u.id as "user_id",
        u.nickname as "user_nickname",
        ui.url as "user_image_url",
        ac.id as "category_id",
        ac.name as "category_name"
        FROM articles a
        JOIN users u ON a.user_id = u.id
        JOIN article_categories ac ON a.category_id = ac.id
        JOIN user_images ui ON a.user_id = ui.user_id
        <where>
            a.is_deleted = false
            <trim prefixOverrides="AND |OR">

                <if test="userId != null">
                    and a.user_id = #{userId}
                </if>

                <if test="userId == null">
                    <if test="searchKey != null and searchValue != null">
                        AND (
                        <choose>
                            <when test="searchKey == 'title'">
                                a.title LIKE CONCAT('%', #{searchValue}, '%')
                            </when>
                            <when test="searchKey == 'content'">
                                a.content LIKE CONCAT('%', #{searchValue}, '%')
                            </when>
                            <when test="searchKey == 'nickname'">
                                u.nickname LIKE CONCAT('%', #{searchValue}, '%')
                            </when>
                        </choose>
                        )
                    </if>

                    <if test="categoryId != null and categoryId != 0">
                        AND a.category_id = #{categoryId}
                    </if>
                </if>
            </trim>
        </where>
        ORDER BY
        <choose>
            <when test="order == 'id_desc'">a.id DESC</when>
            <when test="order == 'id_asc'">a.id ASC</when>
            <when test="order == 'comment_count_asc'">
                a.comment_count DESC,
                a.id ASC
            </when>
            <when test="order == 'vote_count_asc'">
                a.vote_count DESC,
                a.id ASC
            </when>
            <otherwise>a.id DESC</otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countByRequest" parameterType="ArticlePageRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM articles a
        <if test="searchKey == 'nickname'">
            JOIN users u ON a.user_id = u.id
        </if>
        <where>
            a.is_deleted = false
            <trim prefixOverrides="AND |OR">

                <if test="userId != null">
                    and a.user_id = #{userId}
                </if>

                <if test="userId == null">
                    <if test="searchKey != null and searchValue != null">
                        AND (
                        <choose>
                            <when test="searchKey == 'title'">
                                a.title LIKE CONCAT('%', #{searchValue}, '%')
                            </when>
                            <when test="searchKey == 'content'">
                                a.content LIKE CONCAT('%', #{searchValue}, '%')
                            </when>
                            <when test="searchKey == 'nickname'">
                                u.nickname LIKE CONCAT('%', #{searchValue}, '%')
                            </when>
                        </choose>
                        )
                    </if>

                    <if test="categoryId != null and categoryId != 0">
                        AND a.category_id = #{categoryId}
                    </if>
                </if>
            </trim>
        </where>
    </select>

</mapper>
